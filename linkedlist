#singly linked list

class Node:
    def __init__(self, data):
        self.data = data
        self.link = None

class LinkedList:
    def __init__(self):
        self.head = None
    def insert(self, data):
        new_node = Node(data)
        if self.head == None:
            self.head = new_node
        else:
            curr = self.head
            prev = None
            while curr != None and (curr.data < data):
                prev = curr
                curr = curr.link
            if prev == None:
                self.head = new_node
            elif curr == None:
                prev.link = new_node
            else:
                new_node.link = curr
                prev.link = new_node
    def delete(self, data):
        curr = self.head
        prev = None
        while curr and (curr.data < data):
            prev = curr
            curr = curr.link
        if curr is None:
            print("Not Found")
        elif self.head.data == target:
            prev.link = curr.link
        else:
            print("Not Found")
    def update(self, old_data, new data):
        self.delete(old_data)
        self.insert(new_data)
    def search(self, target):
        curr = self.head
        while curr and curr.data < target:
            curr = curr.link
        if curr.data == target:
            return True
        else:
            return False
    def display(self):
        curr = self.head
        print("Linked list contents: ", end = '')
        while curr:
            print(curr.data, end=' ')
            curr = curr.link
        print()
